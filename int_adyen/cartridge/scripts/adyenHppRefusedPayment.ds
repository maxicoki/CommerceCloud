/**
* Updates Adyen specific custom fields when payment was refused and was used Adyen payment method (HPP)
*
*   @input CurrentHttpParameterMap : Object Request parameters
*	@input Order : dw.order.Order Order which should be handled
*
*/
importPackage( dw.system );
importPackage( dw.order); 
importPackage( dw.util );

function execute( args : PipelineDictionary ) : Number
{
	return handle(args.CurrentHttpParameterMap, args.Order);
}

function handle (hpm : Object, order : Order) : Number {
	// Log detailed response to ScriptLog and log file
	var msg : String = createLogMessage(hpm);
	Logger.getLogger("Adyen").debug(msg);
	
	// Check the input parameters
	if (order == null) {
		Logger.getLogger("Adyen").fatal("Payment for not existing order was refused. No order was provided to the script.");
		return PIPELET_ERROR;
	}
	
	// Indicates that payment was made with using Adyen method and was refused
	var refusedHpp = false;
	var paymentInstrument : PaymentInstrument;
	
	try {
		// Check if payment was refused and was used Adyen payment method
		if (hpm.authResult.stringValue == "REFUSED") {
			var paymentInstruments : Collection = order.getPaymentInstruments();
			for each (paymentInstrument in paymentInstruments) {
				if (paymentInstrument.paymentMethod.equals("Adyen")) {
					refusedHpp = true;
					break;
				}
			}
		}
		
		// Update the order only in case if payment was refused and was made with using Adyen payment method
		if (refusedHpp) {
			// Add received information to order
			order.custom.Adyen_pspReference = hpm.pspReference.stringValue;
			order.custom.Adyen_value = paymentInstrument.paymentTransaction.amount * 100;
			order.custom.Adyen_eventCode = "AUTHORISATION";
			order.custom.Adyen_paymentMethod = hpm.paymentMethod.stringValue;
			
			// Add a note with all details
			order.addNote("Adyen Payment Notification", msg);
		}
	} catch (e) {
		// Log the error and exit
		Logger.getLogger("Adyen").fatal("An error occurred during the handling of Refused payment after user was redirected back from Adyen HPP.");
		return PIPELET_ERROR;
	}
	
	return PIPELET_NEXT;
}

function createLogMessage(hpm) {
	var VERSION : String= "4d";
	var msg = "";
	msg = "AdyenHppRefusedPayment v " + VERSION + " - Payment info ";
	msg = msg + "\n================================================================\n";
    //msg = msg + "\nSessionID : " + args.CurrentSession.sessionID;
	msg = msg + "\nmerchantReference : " + hpm.merchantReference.stringValue;
	msg = msg + "\nskinCode : " + hpm.skinCode.stringValue;
	msg = msg + "\nshopperLocale : " + hpm.shopperLocale.stringValue;
	msg = msg + "\nauthResult : " + hpm.authResult.stringValue;
	msg = msg + "\npspReference : " + hpm.pspReference.stringValue;
	msg = msg + "\npaymentMethod : " + hpm.paymentMethod.stringValue;
	return msg;
}


module.exports = {
	'execute': execute,
	'handle': handle
}